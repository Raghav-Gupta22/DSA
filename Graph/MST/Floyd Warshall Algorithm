def buildGraph(v,edges):
    graph=[[float('inf') for i in range(v+1)]for j in range(1+v)]
    for edge in edges:
        u,v,w=edge[0],edge[1],edge[2]
        graph[u][v]=w
        
    return graph
def floydWarshall(v,edges):
    distance=buildGraph(v,edges)
    for i in range(v+1):
        for j in range(v+1):
            if i==j and distance[i][j]==float('inf'):
                distance[i][j]=0
    for k in range(v+1):
        for i in range(v+1):
            for j in range(v+1):
                distance[i][j]=min(distance[i][j],distance[i][k]+distance[k][j])
    FloydWarshall=[["x"]*(v) for _ in range(v)]
    for i in range(1,v+1):
        for j in range(1,v+1):
            FloydWarshall[i-1][j-1]=distance[i][j]
    return FloydWarshall
if __name__=="__main__":
    edges=[[1,2,3],[3,1,5],[1,4,7],[4,1,2],[2,1,8],[3,4,1],[2,3,2]]
    vertices=4
    print(floydWarshall(vertices,edges))
