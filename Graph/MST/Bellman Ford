import math

def BellmanFord(vertices,edges,src):

    isNegativeCycle=False
    distance=[math.inf for i in range(vertices+1)]
    distance[src]=0
    
    for i in range(vertices-1):
        for edge in edges:
            src,dest,wt=edge[0],edge[1],edge[2]
            if distance[src]+wt<distance[dest]:
                distance[dest]=distance[src]+wt
                
    for edge in edges:
        src,dest,wt=edge[0],edge[1],edge[2]
        if distance[src]+wt<distance[dest]:
            isNegativeCycle=True
            break
            
    if isNegativeCycle:
        return -1
    else:
        return distance[1:]
        
if __name__=="__main__":
    vertices=6
    edges=[[1,2,6],[1,3,4],[1,4,5],[2,5,-1],[3,2,-2],[3,5,3],[4,3,-2],[4,6,-1],[5,6,3]]
    print(BellmanFord(vertices,edges,1))
