Problem Link: https://practice.geeksforgeeks.org/problems/perfect-sum-problem5633/1#

class Solution:
    def perfectSum(self, arr, N, summ):
        # code here
        dp=[[False]*(summ+1) for i in range(N+1)]
        for i in range(N + 1):
            dp[i][0] = 2**(arr[:i].count(0))                 #we are doing this because if array conatins 0 then our answer will come wrong.
        for i in range(1,summ + 1):
            dp[0][i]= 0
        for i in range(1,N+1):
            for j in range(1,summ+1):
                if arr[i-1]<=j:
                    dp[i][j]=dp[i-1][j-arr[i-1]] + dp[i-1][j]
                else:
                    dp[i][j]=dp[i-1][j]
        return (dp[N][summ])%((10**9)+7)
#{ 
#  Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    T=int(input())
    for i in range(T):
        n,sum = input().split()
        n,sum = int(n),int(sum)
        arr = [int(x) for x in input().split()]
        ob = Solution()
        ans = ob.perfectSum(arr,n,sum)
        print(ans)

# } Driver Code Ends
