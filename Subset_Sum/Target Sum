Problem Link : https://leetcode.com/problems/target-sum/

------------------------------Recursive solution giving TLE 
class Solution:
    def findTargetSumWays(self, nums: List[int], target: int) -> int:
        def recur(i, S):
            if i >= len(nums):
                if S == target:
                    return 1
                return 0
            
            return recur(i+1, S+nums[i]) + recur(i+1, S-nums[i])
        return recur(0,0)
        
------------------------------MEMOIZATION
class Solution:
    def findTargetSumWays(self, nums: List[int], target: int) -> int:
        dp=[[-1]*(2*(target+1)) for i in range (len(nums)+1)]
        def recur(i, S):
            if i<len(nums):
                if dp[i][S]==-1:
                    return dp[i][S]
                if i >= len(nums):
                    if S == target:
                        dp[i][S]=1
                    dp[i][S]=0
                    dp[i][S]=recur(i+1, S+nums[i]) + recur(i+1, S-nums[i])
        recur(0,0)
        return dp[len(nums)][target]
