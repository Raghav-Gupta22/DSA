Problem Link: https://leetcode.com/problems/delete-node-in-a-bst/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
def find_max(root):
    if root is None:
        return -1
    if root.right is not None:
        return find_max(root.right)
    else:
        return root.val
class Solution:
    def deleteNode(self,root,val):
        if root is None:
            return None
        #reaching to the node
        if val>root.val:
            root.right=self.deleteNode(root.right,val)
        elif val<root.val:
            root.left=self.deleteNode(root.left,val)
        else:
            #now we will perform deletion
            if root.left is not None and root.right is not None:
                left_max=find_max(root.left)
                root.val=left_max
                root.left=self.deleteNode(root.left,left_max)
                return root
            elif root.left is not None:
                return root.left
            elif root.right is not None:
                return root.right
            else:
                return None 
        return root
